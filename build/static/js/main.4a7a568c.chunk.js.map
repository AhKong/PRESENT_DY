{"version":3,"sources":["logo.svg","resource/testsong.m4a","page/mainPage.js","page/memoryPage.js","resource/동충동충.m4a","resource/watermelon.png","page/SongsPage.js","page/MessagePage.js","App.js","reportWebVitals.js","index.js"],"names":["MainPage","history","useEffect","style","backgroundColor","width","height","margin","className","onClick","console","log","answer","prompt","axios","get","then","res","alert","push","MemoryPage","listData","i","href","title","avatar","content","autoplay","src","itemLayout","size","dataSource","renderItem","item","Item","extra","alt","Meta","SongsPage","indexOf","navigator","platform","toLowerCase","watermelon","textAlign","type","HeartFilled","controls","song","MessagePage","TextArea","Input","data","author","datetime","moment","subtract","format","fromNow","name","onFinish","values","label","rows","wrapperCol","offset","htmlType","header","length","localStorage","getItem","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"wSAAe,I,qBCAA,G,OAAA,IAA0B,sC,kBC2D1BA,EArDE,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAEfC,qBAAU,cAGR,IAyBF,OACI,sBAAKC,MAAO,CAACC,gBAAgB,UAAUC,MAAM,OAAOC,OAAO,IAA3D,UACI,qBAAKH,MAAO,CAACC,gBAAgB,UAAUC,MAAM,MAAMC,OAAO,OAAOC,OAAO,UAExE,qBAAKC,UAAU,QAAf,SACI,iFAAgB,uBAAhB,sIAIJ,sBAAKA,UAAU,YAAf,UACI,qBAAKC,QAjCI,WACjBC,QAAQC,IAAI,gDACZ,IAAIC,EAASC,OAAO,+RACpBC,IAAMC,IAAI,SAASH,GACdI,MAAK,SAAAC,GACFP,QAAQC,IAAIM,MAEN,yCAAXL,GAAiC,qDAAVA,GACtBM,MAAM,gDACNjB,EAAQkB,KAAK,eAEbD,MAAM,8JAsB0BV,UAAU,aAAtC,yDACA,qBAAKA,UAAU,cAAcC,QAfvB,WACdS,MAAM,qQACNjB,EAAQkB,KAAK,0BAaL,gCACA,qBAAKX,UAAU,aAAaC,QApBpB,WAChBR,EAAQkB,KAAK,wCAmBL,6BAGJ,qBAAKX,UAAU,SAAf,4B,2BCcIY,EA9DG,WAEf,IADA,IAAMC,EAAW,GACRC,EAAI,EAAGA,EAAI,EAAGA,IACnBD,EAASF,KAAK,CACVI,KAAM,qBACNC,MAAM,mBAAD,OAAqBF,GAC1BG,OAAQ,mEAERC,QACI,iBAMZ,OACI,sBAAKlB,UAAU,cAAf,UACI,qBAAKA,UAAU,cAAf,SACI,yHAEJ,8BACI,eAAC,IAAD,CAAUmB,UAAQ,EAAlB,UACI,8BACI,qBAAKnB,UAAU,cAAcoB,IAAI,+FAErC,8BACI,qBAAKpB,UAAU,cAAcoB,IAAI,+FAErC,8BACI,qBAAKpB,UAAU,cAAcoB,IAAI,oGAI7C,qBAAKpB,UAAU,UAAf,SACI,cAAC,IAAD,CACIqB,WAAW,WACXC,KAAK,QACLC,WAAYV,EACZW,WAAY,SAAAC,GAAI,OACZ,eAAC,IAAKC,KAAN,CAEIC,MACI,qBACI9B,MAAM,MACN+B,IAAI,OACJR,IAAI,wEANhB,UAUI,cAAC,IAAKM,KAAKG,KAAX,CACIb,MAAO,mBAAGD,KAAMU,EAAKV,KAAd,SAAqBU,EAAKT,UAErC,6BAAKS,EAAKP,YAZLO,EAAKT,gB,UC3CvB,I,QCAA,MAA0B,uCCwF1Bc,EAjFG,WAOd,OANApC,qBAAU,WACO,iCACFqC,QAAQC,UAAUC,SAASC,eAAiB,GACnDxB,MAAM,mKAEZ,IAEE,qBAAKV,UAAU,OAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,uBACC,sBAAKA,UAAU,SAAf,UACI,qBAAKL,MAAO,CAACE,MAAM,SAAUuB,IAAMe,IACnC,sBAAMnC,UAAU,WAAhB,gCACA,sBAAMA,UAAU,SAAhB,sDAEL,kCACI,uBAAOL,MAAO,CAACyC,UAAU,UAAzB,SACA,+BACI,6BAAI,uBAAOC,KAAK,eAChB,8CACA,0DACA,oDACA,mDAIJ,kCACA,+BACI,oBAAIrC,UAAU,aAAd,SAA2B,uBAAOqC,KAAK,eACvC,oBAAIrC,UAAU,UAAd,6EACA,oBAAIA,UAAW,WAAf,2CACA,qBAAIA,UAAW,SAAf,uBAAkC,cAACsC,EAAA,EAAD,OAClC,oBAAItC,UAAW,SAAf,SACI,uBAAOuC,UAAQ,EAAf,SACI,wBAAQnB,IAAKoB,EAAMH,KAAK,qBAIpC,+BACI,oBAAIrC,UAAU,aAAd,SAA4B,uBAAOqC,KAAK,eACxC,oBAAIrC,UAAU,UAAd,6EACA,oBAAIA,UAAW,WAAf,sCACA,qBAAIA,UAAW,SAAf,uBAAkC,cAACsC,EAAA,EAAD,OAClC,oBAAItC,UAAW,SAAf,SACI,uBAAOuC,UAAQ,EAAf,SACI,wBAAQnB,IAAKoB,EAAMH,KAAK,qBAIpC,+BACI,oBAAIrC,UAAU,aAAd,SAA2B,uBAAOqC,KAAK,eACvC,oBAAIrC,UAAU,UAAd,6EACA,oBAAIA,UAAW,WAAf,sCACA,qBAAIA,UAAW,SAAf,uBAAkC,cAACsC,EAAA,EAAD,OAClC,oBAAItC,UAAW,SAAf,SACI,uBAAOuC,UAAQ,EAAf,SACI,wBAAQnB,IAAKoB,EAAMH,KAAK,qBAIpC,+BACI,oBAAIrC,UAAU,aAAd,SAA2B,uBAAOqC,KAAK,eACvC,oBAAIrC,UAAU,UAAd,6EACA,oBAAIA,UAAW,WAAf,sCACA,qBAAIA,UAAW,SAAf,uBAAkC,cAACsC,EAAA,EAAD,OAClC,oBAAItC,UAAW,SAAf,SACI,uBAAOuC,UAAQ,EAAf,SACI,wBAAQnB,IAAKoB,EAAMH,KAAK,iC,uECoFzCI,G,OA1JK,WAAO,IAEfC,EAAaC,IAAbD,SACFE,EAAO,CACT,CAEIC,OAAQ,qBACR3B,QACI,oFAIJ4B,SACI,cAAC,IAAD,CAAS9B,MAAO+B,MAASC,SAAS,EAAG,QAAQC,OAAO,uBAApD,SACI,+BAAOF,MAASC,SAAS,EAAG,QAAQE,eAIhD,CAEIL,OAAQ,WACR3B,QACI,8NAMJ4B,SACI,cAAC,IAAD,CAAS9B,MAAO+B,MAASC,SAAS,EAAG,QAAQC,OAAO,uBAApD,SACI,+BAAOF,MAASC,SAAS,EAAG,QAAQE,eAIhD,CACIL,OAAQ,WACR5B,OAAQ,mEACRC,QACI,8NAMJ4B,SACI,cAAC,IAAD,CAAS9B,MAAO+B,MAASC,SAAS,EAAG,QAAQC,OAAO,uBAApD,SACI,+BAAOF,MAASC,SAAS,EAAG,QAAQE,gBAuDpD,OAEI,sBAAKlD,UAAU,eAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,iMAGJ,qBAAKA,UAAU,SAAf,SACI,qBAAMA,UAAU,QAAQoB,IAAI,+MAIhC,qBAAKpB,UAAU,gBAAf,SAEI,eAAC,IAAD,CAAOmD,KAAK,gBAAgBC,SAlBvB,SAACC,GACdnD,QAAQC,IAAIkD,IAiBJ,UACI,cAAC,IAAK3B,KAAN,CAAW4B,MAAM,qBAAjB,SACD,4BAEC,cAAC,IAAK5B,KAAN,CAAW4B,MAAM,qBAAjB,SACI,cAACZ,EAAD,CAAWa,KAAM,MAErB,cAAC,IAAK7B,KAAN,CAAW8B,WAAY,CAAEC,OAAQ,IAAjC,SACI,cAAC,IAAD,CAAQpB,KAAK,UAAUqB,SAAS,SAAhC,2BAMZ,cAAC,IAAD,CACI1D,UAAU,eACV2D,OAAM,UAAKf,EAAKgB,OAAV,gDACNvC,WAAW,aACXE,WAAYqB,EACZpB,WAAY,SAAAC,GAAI,OACZ,+BACI,cAAC,IAAD,CAEIoB,OAAQpB,EAAKoB,OACb3B,QAASO,EAAKP,WAGgB,IAAjC2C,aAAaC,QAAQ,QAAkB,cAAC,IAAD,2BAAoB,gBC7HrEC,MAdf,WAGI,OACI,gCACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWzE,EAAU0E,OAAK,IAC1C,cAAC,IAAD,CAAOF,KAAK,aAAaC,UAAWrD,IACpC,cAAC,IAAD,CAAOoD,KAAK,wBAAwBC,UAAWxB,IAC/C,cAAC,IAAD,CAAOuB,KAAK,sCAAsCC,UAAWnC,QCJ1DqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7D,MAAK,YAAkD,IAA/C8D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCAdO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.4a7a568c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/testsong.37077a86.m4a\";","import React,{useEffect} from 'react';\n\nimport '../css/main.css';\nimport song from '../resource/testsong.m4a';\nimport axios from \"axios\";\n\nconst MainPage = ({history}) => {\n\n    useEffect(()=>{\n        //alert('도연이의 졸업을 누구보다 축하해주고 싶은 아름이와 민정이가 준비한 서프라이즈 선물이야 도연아 맘껏즐겨 사랑해💖')\n\n    },[])\n\n    const goMemoryPage = () =>{\n        console.log('클릭 이벤트 확인')\n        let answer = prompt('해당 메뉴를 이용하기 위해서는 비밀번호가 필요합니다 맞춰보세요~ 힌트는 우리가 도연이에게 전하고 싶은 말')\n        axios.get('/test/'+answer)\n            .then(res => {\n                console.log(res);\n            })\n        if(answer === '도연아사랑해' || answer ==='도연아졸업축하해'){\n            alert('도연이가 맞구나!')\n            history.push('/weLoveYou')\n        } else {\n            alert('당신은 도연이가 아닙니다. 어떻게 비밀번호를 모를 수 있죠?')\n        }\n    }\n\n    const goSongsPage = () => {\n        history.push('/congratulations-on-your-graduation')\n    }\n\n    const goMsgPage = () => {\n        alert('도연이의 졸업을 축하하는 메세지를 입력해주세요! 비방글을 올린다면 지구 끝까지 찾아갈거랍니다.');\n        history.push('/listen-to-my-message');\n    }\n    return (\n        <div style={{backgroundColor:\"#5B9BD5\",width:\"100%\",height:\"\"}}>\n            <div style={{backgroundColor:\"#5B9BD5\",width:\"70%\",height:\"70px\",margin:\"auto\"}}>\n            </div>\n            <div className=\"title\">\n                <p>벌써 졸업이라니!!!! <br/>우리 마음 알지 졸업 축하해^^👩🏻‍🎓🎉\n                </p>\n            </div>\n\n            <div className=\"menu-warp\">\n                <div onClick={goMemoryPage} className=\"menu first\" >이도연만 보시오</div>\n                <div className=\"menu second\" onClick={goMsgPage}>방명록</div>\n                <div className=\"menu third\" onClick={goSongsPage}>축가</div>\n            </div>\n\n            <div className=\"footer\">\n                dev ahkong\n            </div>\n\n        </div>\n    )\n}\n\nexport default MainPage;","import React from \"react\";\nimport '../css/memory.css';\nimport { Carousel ,List, Avatar, Space} from 'antd';\nconst MemoryPage = () =>{\n    const listData = [];\n    for (let i = 0; i < 3; i++) {\n        listData.push({\n            href: 'https://ant.design',\n            title: `ant design part ${i}`,\n            avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n\n            content:\n                '잠와',\n        });\n    }\n\n\n\n    return (\n        <div className=\"memory-warp\">\n            <div className=\"memoryTitle\">\n                <h1>남서울대 최고의 아웃풋 === 이도연</h1>\n            </div>\n            <div>\n                <Carousel autoplay>\n                    <div>\n                        <img className=\"carouselImg\" src=\"https://cdnweb01.wikitree.co.kr/webdata/editor/201710/15/img_20171015122006_4a43f846.jpg\"/>\n                    </div>\n                    <div>\n                        <img className=\"carouselImg\" src=\"https://cdnweb01.wikitree.co.kr/webdata/editor/201710/15/img_20171015122006_4a43f846.jpg\"/>\n                    </div>\n                    <div>\n                        <img className=\"carouselImg\" src=\"https://cdnweb01.wikitree.co.kr/webdata/editor/201710/15/img_20171015122006_4a43f846.jpg\"/>\n                    </div>\n                </Carousel>\n            </div>\n            <div className=\"imgList\">\n                <List\n                    itemLayout=\"vertical\"\n                    size=\"small\"\n                    dataSource={listData}\n                    renderItem={item => (\n                        <List.Item\n                            key={item.title}\n                            extra={\n                                <img\n                                    width=\"300\"\n                                    alt=\"logo\"\n                                    src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\n                                />\n                            }\n                        >\n                            <List.Item.Meta\n                                title={<a href={item.href}>{item.title}</a>}\n                            />\n                            <h4>{item.content}</h4>\n                        </List.Item>\n                    )}\n                />\n            </div>\n\n        </div>\n    )\n}\n\nexport  default MemoryPage;","export default __webpack_public_path__ + \"static/media/동충동충.1dfbd561.m4a\";","export default __webpack_public_path__ + \"static/media/watermelon.568ccc4d.png\";","import React,{useEffect} from \"react\";\nimport '../css/songPage.css';\nimport song from '../resource/testsong.m4a';\nimport dongchung from '../resource/동충동충.m4a';\nimport {HeartFilled} from \"@ant-design/icons\";\nimport watermelon from '../resource/watermelon.png';\n\nconst SongsPage = () =>{\n    useEffect(() =>{\n        var filter = \"win16|win32|win64|mac|macintel\";\n        if (filter.indexOf(navigator.platform.toLowerCase()) < 0) {\n            alert('해당 페이지는 pc환경에 최적화 되었습니다. pc로 접속해 주세요!')\n        }\n    },[])\n    return (\n        <div className=\"body\">\n            <div className=\"warp-contents\">\n                <h1></h1>\n                 <div className=\"imgDiv\">\n                     <img style={{width:\"100px\"}} src ={watermelon}/>\n                     <span className=\"nickName\">이도연</span>\n                     <span className=\"mySpan\">님 취향저격 Best4</span>\n                 </div>\n                <table>\n                    <thead style={{textAlign:\"center\"}}>\n                    <tr>\n                        <th><input type=\"checkbox\"/></th>\n                        <th>제목</th>\n                        <th>아티스트</th>\n                        <th>좋아요</th>\n                        <th>듣기</th>\n                    </tr>\n                    </thead>\n\n                    <tbody>\n                    <tr>\n                        <td className=\"checkBoxTd\"><input type=\"checkbox\"/></td>\n                        <td className=\"titleTd\">도연이를 향한 세레나데 </td>\n                        <td className =\"artistTd\">아티스트dlfma</td>\n                        <td className =\"likeTd\"> 19970625 <HeartFilled /></td>\n                        <td className =\"songTd\">\n                            <audio controls>\n                                <source src={song} type=\"audio/mp3\"/>\n                            </audio>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"checkBoxTd\" ><input type=\"checkbox\"/></td>\n                        <td className=\"titleTd\">도연이를 향한 세레나데 </td>\n                        <td className =\"artistTd\">아티스트</td>\n                        <td className =\"likeTd\"> 19970625 <HeartFilled /></td>\n                        <td className =\"songTd\">\n                            <audio controls>\n                                <source src={song} type=\"audio/mp3\"/>\n                            </audio>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"checkBoxTd\"><input type=\"checkbox\"/></td>\n                        <td className=\"titleTd\">도연이를 향한 세레나데 </td>\n                        <td className =\"artistTd\">아티스트</td>\n                        <td className =\"likeTd\"> 19970625 <HeartFilled /></td>\n                        <td className =\"songTd\">\n                            <audio controls>\n                                <source src={song} type=\"audio/mp3\"/>\n                            </audio>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"checkBoxTd\"><input type=\"checkbox\"/></td>\n                        <td className=\"titleTd\">도연이를 향한 세레나데 </td>\n                        <td className =\"artistTd\">아티스트</td>\n                        <td className =\"likeTd\"> 19970625 <HeartFilled /></td>\n                        <td className =\"songTd\">\n                            <audio controls>\n                                <source src={song} type=\"audio/mp3\"/>\n                            </audio>\n                        </td>\n\n                    </tr>\n\n                    </tbody>\n                </table>\n            </div>\n\n        </div>)\n}\n\nexport default SongsPage;","import React from 'react';\nimport { Form, Input, InputNumber, Button,Comment, Tooltip, List } from 'antd';\nimport moment from 'moment';\nimport '../css/message.css';\n\nconst MessagePage = () => {\n\n    const { TextArea } = Input;\n    const data = [\n        {\n\n            author: '박지훈',\n            content: (\n                <p>\n                    도연아 졸업축하해^^\n                </p>\n            ),\n            datetime: (\n                <Tooltip title={moment().subtract(1, 'days').format('YYYY-MM-DD HH:mm:ss')}>\n                    <span>{moment().subtract(1, 'days').fromNow()}</span>\n                </Tooltip>\n            ),\n        },\n        {\n\n            author: 'Han Solo',\n            content: (\n                <p>\n                    We supply a series of design principles, practical patterns and high quality design\n                    resources (Sketch and Axure), to help people create their product prototypes beautifully and\n                    efficiently.\n                </p>\n            ),\n            datetime: (\n                <Tooltip title={moment().subtract(2, 'days').format('YYYY-MM-DD HH:mm:ss')}>\n                    <span>{moment().subtract(2, 'days').fromNow()}</span>\n                </Tooltip>\n            ),\n        },\n        {\n            author: 'Han Solo',\n            avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n            content: (\n                <p>\n                    We supply a series of design principles, practical patterns and high quality design\n                    resources (Sketch and Axure), to help people create their product prototypes beautifully and\n                    efficiently.\n                </p>\n            ),\n            datetime: (\n                <Tooltip title={moment().subtract(2, 'days').format('YYYY-MM-DD HH:mm:ss')}>\n                    <span>{moment().subtract(2, 'days').fromNow()}</span>\n                </Tooltip>\n            ),\n        }\n    ];\n\n    const Editor = ({ onChange, onSubmit, submitting, value }) => (\n        <>\n            <Form.Item>\n                <TextArea rows={4} onChange={onChange} value={value} />\n            </Form.Item>\n            <Form.Item>\n                <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\n                    Add Comment\n                </Button>\n            </Form.Item>\n        </>\n    );\n\n    const handleSubmit = () => {\n        if (!this.state.value) {\n            return;\n        }\n\n        this.setState({\n            submitting: true,\n        });\n\n        setTimeout(() => {\n            this.setState({\n                submitting: false,\n                value: '',\n                comments: [\n                    {\n                        author: 'Han Solo',\n                        avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n                        content: <p>{this.state.value}</p>,\n                        datetime: moment().fromNow(),\n                    },\n                    ...this.state.comments,\n                ],\n            });\n        }, 1000);\n    };\n\n    const handleChange = e => {\n        this.setState({\n            value: e.target.value,\n        });\n    };\n\n    const onFinish = (values) => {\n        console.log(values);\n    };\n\n    return (\n\n        <div className=\"content-warp\">\n            <div className=\"message-title\">\n                <h1> 💌 도연이의 졸업을 축하하는 메세지를 작성해주세요 💌</h1>\n            </div>\n\n            <div className=\"avatar\">\n                <img  className=\"myImg\" src=\"https://mblogthumb-phinf.pstatic.net/MjAxNzA2MjFfODgg/MDAxNDk3OTczODQ4MDcy.l55AQYzWAAPozeai4V1nXo94JOZomrEF50yH-Q3MiIsg.z1sRir8Tici9RonKsZ6vp6NNp08S6ScKZr4Ob6eIls0g.GIF.milkaruu/IMG_2891.GIF?type=w800\"/>\n\n            </div>\n\n            <div className=\"input-comment\">\n\n                <Form  name=\"nest-messages\" onFinish={onFinish}     >\n                    <Form.Item label=\"작성자\">\n                   <input />\n                    </Form.Item>\n                    <Form.Item label=\"메시지\">\n                        <TextArea  rows={3}/>\n                    </Form.Item>\n                    <Form.Item wrapperCol={{ offset: 22 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n            <List\n                className=\"comment-list\"\n                header={`${data.length} 개의 축하메세지`}\n                itemLayout=\"horizontal\"\n                dataSource={data}\n                renderItem={item => (\n                    <li>\n                        <Comment\n\n                            author={item.author}\n                            content={item.content}\n\n                        />\n                        {localStorage.getItem(\"isMe\") === true ?<Button>삭제</Button>:null    }\n                    </li>\n                )}\n            />\n        </div>\n\n\n\n\n    )\n}\n\nexport default MessagePage;","import logo from './logo.svg';\nimport './App.css';\nimport 'antd/dist/antd.css'\nimport { Route } from 'react-router-dom';\nimport MainPage from \"./page/mainPage\";\nimport MemoryPage from \"./page/memoryPage\";\nimport SongsPage from \"./page/SongsPage\";\nimport MessagePage from \"./page/MessagePage\";\nfunction App() {\n\n\n    return (\n        <div>\n            <Route path=\"/\" component={MainPage} exact/>\n            <Route path=\"/WeLoveYou\" component={MemoryPage}/>\n            <Route path=\"/listen-to-my-message\" component={MessagePage}/>\n            <Route path=\"/congratulations-on-your-graduation\" component={SongsPage}></Route>\n        </div>\n\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}